// Generated by LiveScript 1.3.1
(function(){
  var patch, color, lc;
  patch = function(it){
    return it.replace(/臺/g, '台');
  };
  color = {
    "合一行動聯盟": null,
    "中華統一促進黨": null,
    "親民黨": '#f90',
    "安定力量": null,
    "台灣基進": null,
    "時代力量": '#ff0',
    "新黨": null,
    "喜樂島聯盟": null,
    "中國國民黨": '#00f',
    "一邊一國行動黨": null,
    "勞動黨": null,
    "綠黨": null,
    "宗教聯盟": null,
    "民主進步黨": '#0f0',
    "台灣民眾黨": '#0ff',
    "台灣維新": null,
    "台澎黨": null,
    "國會政黨聯盟": null,
    "台灣團結聯盟": null
  };
  lc = {
    map: {}
  };
  lc.map.win = pdmaptw.create({
    root: ld$.find(document, '#win', 0),
    type: 'town'
  });
  lc.map.lose = pdmaptw.create({
    root: ld$.find(document, '#lose', 0),
    type: 'town'
  });
  return lc.map.win.init().then(function(){
    return lc.map.lose.init();
  }).then(function(){
    return ld$.fetch("assets/party-rank.json", {
      method: 'GET'
    }, {
      type: 'json'
    });
  }).then(function(data){
    return lc.data = data;
  }).then(function(){
    var i$, ref$, len$, type, obj, view, results$ = [];
    for (i$ = 0, len$ = (ref$ = ['win', 'lose']).length; i$ < len$; ++i$) {
      type = ref$[i$];
      obj = lc.map[type];
      obj.fit();
      d3.select(obj.root).selectAll('path').attr('fill', fn$).attr('stroke', fn1$).attr('stroke-width', fn2$);
      results$.push(view = new ldView({
        root: "[ld-scope=" + type + "]",
        handler: {
          label: {
            list: fn3$,
            handle: fn4$
          }
        }
      }));
    }
    return results$;
    function fn$(it){
      var name, c, e;
      name = patch(obj.lc.meta.name[it.properties.c] + obj.lc.meta.name[it.properties.t]);
      try {
        c = color[lc.data[name][type][0]] || '#ccc';
      } catch (e$) {
        e = e$;
        c = 'rgba(0,0,0,.5)';
      }
      return c;
    }
    function fn1$(){
      return '#000';
    }
    function fn2$(){
      return 0.00;
    }
    function fn3$(){
      var k, v;
      return (function(){
        var ref$, results$ = [];
        for (k in ref$ = color) {
          v = ref$[k];
          results$.push([k, v]);
        }
        return results$;
      }()).filter(function(it){
        return it[1];
      }).map(function(it){
        return it[0];
      }).concat(["其它"]);
    }
    function fn4$(arg$){
      var data, node;
      data = arg$.data, node = arg$.node;
      ld$.find(node, '.dot', 0).style.background = color[data] || '#ccc';
      return ld$.find(node, '.name', 0).innerText = data;
    }
  });
})();